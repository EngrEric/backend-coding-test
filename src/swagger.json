{
  "openapi": "3.0.0",
  "info": {
    "description": "API Documentation for Booking Riders",
    "version": "0.0.1",
    "title": "Rider API Documentation",
    "contact": {
      "email": "okemmadueric@gmail.com"
    }
  },
  "security": [],
  "servers": [
    {
      "url": "http://localhost:8010",
      "description": "Development server"
    },
    {
      "url": "https://backend-test-coding.herokuapp.com",
      "description": "Production server"
    }
  ],

  "tags": [
    {
      "name": "Ride API",
      "description": "A basic API for booking rides",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Pings the server to know if its reachable",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },

    "/rides": {
      "post": {
        "tags": ["Rider"],
        "summary": "Adds a new rider",
        "operationId": "addRider",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Ride"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Ride"
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },

      "get": {
        "tags": ["Rider"],
        "summary": "Get all the riders",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": { "type": "number" }
          },
          {
            "in": "query",
            "name": "lastID",
            "required": true,
            "schema": { "type": "number" }
          }
        ],
        "operationId": "getRiders",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Rides"
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },

    "/rides/{id}": {
      "get": {
        "tags": ["Rider"],
        "summary": "Retrives a sigle record of a rider by its ID",
        "operationId": "getRiderById",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The rider ID to be retrived",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Ride"
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Rider": {
        "type": "object",
        "properties": {
          "startLat": {
            "type": "number"
          },
          "startLong": {
            "type": "number"
          },
          "endLat": {
            "type": "number"
          },
          "endLong": {
            "type": "number"
          },
          "riderName": {
            "type": "string"
          },
          "driverName": {
            "type": "string"
          },
          "driverVehicle": {
            "type": "string"
          },
          "created": {
            "type": "string"
          }
        },
        "required": [
          "startLat",
          "startLong",
          "endLat",
          "endLong",
          "riderName",
          "driverName",
          "driverVehicle"
        ]
      }
    },
    "requestBodies": {
      "Ride": {
        "description": "needed to create the required ride",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Rider"
            }
          }
        },
        "required": true
      }
    },
    "responses": {
      "Ride": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "$ref": "#/components/schemas/Rider"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Rides": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Rider"
                  }
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Error": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error_code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Access token is missing or invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden from accessing this route",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ServerError": {
        "description": "Unexpected server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "error_code": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Access token for protected resources"
      }
    }
  }
}
